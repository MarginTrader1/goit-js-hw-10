{"mappings":"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","sources":["src/cat-api.js","src/index.js","node_modules/slim-select/dist/slimselect.umd.js"],"sourcesContent":["const catInfo = document.querySelector('.cat-info');\nconst KEY_API = 'live_sEDFMHRNSodHCaL7awGvLr0m2GM2ft2fhMh0p4uHuGLReqOu194EfLuWmNYD9tGw';\n\nconst loader = document.querySelector('.loader');\nconst error = document.querySelector('.error');\n\n// получаем породы и вызываем функцию создания разметки \nfunction fetchBreeds(url) {\n  return fetch(url)\n  .then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    error.classList.add(\"visually-hidden\")\n    loader.classList.add(\"visually-hidden\")\n    return response.json();\n  })\n  .then(json => renderBreedsList(json))\n  .catch(error => {\n    // Error handling\n    error.classList.remove(\"visually-hidden\")\n  });\n}   \n\n// функция создания разметки при перезагрузке страницы \nfunction renderBreedsList(breeds) {\n  \n  const breedList = document.querySelector('.breed-select');\n  \n  const markup = breeds\n    .map((breed) => {\n      return `\n      <option value=\"${breed.id}\">${breed.name}</option>\n      `;\n    })\n    .join(\"\");\n  breedList.innerHTML = markup;\n}\n\n// получаем кота по введенной породе \nfunction fetchCatByBreed(breedId){\n  \n  const urlСatByBreed = `https://api.thecatapi.com/v1/images/search?api_key=${KEY_API}&limit=1&breed_ids=${breedId}`\n  \n  fetch(urlСatByBreed)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      error.classList.add(\"visually-hidden\")\n      return response.json();\n    })\n    .then(json => renderCatInfo(json)) \n    .catch(error => {\n      // Error handling\n    });\n  }\n\n// создания разметки для информации о породе \nfunction renderCatInfo(breedData) {\n  \n  // добавляем url\n  const markupUrl = breedData\n    .map((item) => {\n      return `\n      <img src=\"${item.url}\" width=\"500\">              \n      `;\n  });\n\n  // вытягиваем и добавляем описание и имя\n  const markupName = breedData\n    .flatMap(elem => elem.breeds)\n    .map((item) => {\n      return `\n      <h2>${item.name}</h2>\n      <p>${item.description}</p>              \n      `;\n  });\n\n  // вставляем разметку в код\n  catInfo.innerHTML = markupUrl + markupName;\n}\n\n\nexport { fetchBreeds,fetchCatByBreed }; ","import { fetchBreeds, fetchCatByBreed } from './cat-api.js';\nimport SlimSelect from 'slim-select';\n\nnew SlimSelect({\n  select: '#selectElement'\n})\n\nconst breedList = document.querySelector('.breed-select');\n\nconst url = `https://api.thecatapi.com/v1/breeds`;\n\n// вызов функции при загрузке страницы\ndocument.addEventListener(\"DOMContentLoaded\", () => { \n  fetchBreeds(url);\n});\n\n// получаем выбранное значение породы \nfunction getSelectBreed(e){\n  const breedId = e.target.value;\n  fetchCatByBreed(breedId);\n}\n\nbreedList.addEventListener('change', getSelectBreed)\n\n\n\n\n\n\n  ","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.SlimSelect = factory());\n})(this, (function () { 'use strict';\n\n    function generateID() {\n        return Math.random().toString(36).substring(2, 10);\n    }\n    function hasClassInTree(element, className) {\n        function hasClass(e, c) {\n            if (c && e && e.classList && e.classList.contains(c)) {\n                return e;\n            }\n            if (c && e && e.dataset && e.dataset.id && e.dataset.id === className) {\n                return e;\n            }\n            return null;\n        }\n        function parentByClass(e, c) {\n            if (!e || e === document) {\n                return null;\n            }\n            else if (hasClass(e, c)) {\n                return e;\n            }\n            else {\n                return parentByClass(e.parentNode, c);\n            }\n        }\n        return hasClass(element, className) || parentByClass(element, className);\n    }\n    function debounce(func, wait = 50, immediate = false) {\n        let timeout;\n        return function (...args) {\n            const context = self;\n            const later = () => {\n                timeout = null;\n                if (!immediate) {\n                    func.apply(context, args);\n                }\n            };\n            const callNow = immediate && !timeout;\n            clearTimeout(timeout);\n            timeout = setTimeout(later, wait);\n            if (callNow) {\n                func.apply(context, args);\n            }\n        };\n    }\n    function isEqual(a, b) {\n        return JSON.stringify(a) === JSON.stringify(b);\n    }\n    function kebabCase(str) {\n        const result = str.replace(/[A-Z\\u00C0-\\u00D6\\u00D8-\\u00DE]/g, (match) => '-' + match.toLowerCase());\n        return str[0] === str[0].toUpperCase() ? result.substring(1) : result;\n    }\n\n    class Settings {\n        constructor(settings) {\n            this.id = '';\n            this.style = '';\n            this.class = [];\n            this.isMultiple = false;\n            this.isOpen = false;\n            this.isFullOpen = false;\n            this.intervalMove = null;\n            if (!settings) {\n                settings = {};\n            }\n            this.id = 'ss-' + generateID();\n            this.style = settings.style || '';\n            this.class = settings.class || [];\n            this.disabled = settings.disabled !== undefined ? settings.disabled : false;\n            this.alwaysOpen = settings.alwaysOpen !== undefined ? settings.alwaysOpen : false;\n            this.showSearch = settings.showSearch !== undefined ? settings.showSearch : true;\n            this.searchPlaceholder = settings.searchPlaceholder || 'Search';\n            this.searchText = settings.searchText || 'No Results';\n            this.searchingText = settings.searchingText || 'Searching...';\n            this.searchHighlight = settings.searchHighlight !== undefined ? settings.searchHighlight : false;\n            this.closeOnSelect = settings.closeOnSelect !== undefined ? settings.closeOnSelect : true;\n            this.contentLocation = settings.contentLocation || document.body;\n            this.contentPosition = settings.contentPosition || 'absolute';\n            this.openPosition = settings.openPosition || 'auto';\n            this.placeholderText = settings.placeholderText !== undefined ? settings.placeholderText : 'Select Value';\n            this.allowDeselect = settings.allowDeselect !== undefined ? settings.allowDeselect : false;\n            this.hideSelected = settings.hideSelected !== undefined ? settings.hideSelected : false;\n            this.showOptionTooltips = settings.showOptionTooltips !== undefined ? settings.showOptionTooltips : false;\n            this.minSelected = settings.minSelected || 0;\n            this.maxSelected = settings.maxSelected || 1000;\n            this.timeoutDelay = settings.timeoutDelay || 200;\n            this.maxValuesShown = settings.maxValuesShown || 20;\n            this.maxValuesMessage = settings.maxValuesMessage || '{number} selected';\n        }\n    }\n\n    class Optgroup {\n        constructor(optgroup) {\n            this.id = !optgroup.id || optgroup.id === '' ? generateID() : optgroup.id;\n            this.label = optgroup.label || '';\n            this.selectAll = optgroup.selectAll === undefined ? false : optgroup.selectAll;\n            this.closable = optgroup.closable || 'off';\n            this.options = [];\n            if (optgroup.options) {\n                for (const o of optgroup.options) {\n                    this.options.push(new Option(o));\n                }\n            }\n        }\n    }\n    class Option {\n        constructor(option) {\n            this.id = !option.id || option.id === '' ? generateID() : option.id;\n            this.value = option.value === undefined ? option.text : option.value;\n            this.text = option.text || '';\n            this.html = option.html || '';\n            this.selected = option.selected !== undefined ? option.selected : false;\n            this.display = option.display !== undefined ? option.display : true;\n            this.disabled = option.disabled !== undefined ? option.disabled : false;\n            this.mandatory = option.mandatory !== undefined ? option.mandatory : false;\n            this.placeholder = option.placeholder !== undefined ? option.placeholder : false;\n            this.class = option.class || '';\n            this.style = option.style || '';\n            this.data = option.data || {};\n        }\n    }\n    class Store {\n        constructor(type, data) {\n            this.selectType = 'single';\n            this.data = [];\n            this.selectType = type;\n            this.setData(data);\n        }\n        validateDataArray(data) {\n            if (!Array.isArray(data)) {\n                return new Error('Data must be an array');\n            }\n            for (let dataObj of data) {\n                if (dataObj instanceof Optgroup || 'label' in dataObj) {\n                    if (!('label' in dataObj)) {\n                        return new Error('Optgroup must have a label');\n                    }\n                    if ('options' in dataObj && dataObj.options) {\n                        for (let option of dataObj.options) {\n                            return this.validateOption(option);\n                        }\n                    }\n                }\n                else if (dataObj instanceof Option || 'text' in dataObj) {\n                    return this.validateOption(dataObj);\n                }\n                else {\n                    return new Error('Data object must be a valid optgroup or option');\n                }\n            }\n            return null;\n        }\n        validateOption(option) {\n            if (!('text' in option)) {\n                return new Error('Option must have a text');\n            }\n            return null;\n        }\n        partialToFullData(data) {\n            let dataFinal = [];\n            data.forEach((dataObj) => {\n                if (dataObj instanceof Optgroup || 'label' in dataObj) {\n                    let optOptions = [];\n                    if ('options' in dataObj && dataObj.options) {\n                        dataObj.options.forEach((option) => {\n                            optOptions.push(new Option(option));\n                        });\n                    }\n                    if (optOptions.length > 0) {\n                        dataFinal.push(new Optgroup(dataObj));\n                    }\n                }\n                if (dataObj instanceof Option || 'text' in dataObj) {\n                    dataFinal.push(new Option(dataObj));\n                }\n            });\n            return dataFinal;\n        }\n        setData(data) {\n            this.data = this.partialToFullData(data);\n            if (this.selectType === 'single') {\n                this.setSelectedBy('value', this.getSelected());\n            }\n        }\n        getData() {\n            return this.filter(null, true);\n        }\n        getDataOptions() {\n            return this.filter(null, false);\n        }\n        addOption(option) {\n            this.setData(this.getData().concat(new Option(option)));\n        }\n        setSelectedBy(selectedType, selectedValues) {\n            let firstOption = null;\n            let hasSelected = false;\n            for (let dataObj of this.data) {\n                if (dataObj instanceof Optgroup) {\n                    for (let option of dataObj.options) {\n                        if (!firstOption) {\n                            firstOption = option;\n                        }\n                        option.selected = hasSelected ? false : selectedValues.includes(option[selectedType]);\n                        if (option.selected && this.selectType === 'single') {\n                            hasSelected = true;\n                        }\n                    }\n                }\n                if (dataObj instanceof Option) {\n                    if (!firstOption) {\n                        firstOption = dataObj;\n                    }\n                    dataObj.selected = hasSelected ? false : selectedValues.includes(dataObj[selectedType]);\n                    if (dataObj.selected && this.selectType === 'single') {\n                        hasSelected = true;\n                    }\n                }\n            }\n            if (this.selectType === 'single' && firstOption && !hasSelected) {\n                firstOption.selected = true;\n            }\n        }\n        getSelected() {\n            let selectedOptions = this.getSelectedOptions();\n            let selectedValues = [];\n            selectedOptions.forEach((option) => {\n                selectedValues.push(option.value);\n            });\n            return selectedValues;\n        }\n        getSelectedOptions() {\n            return this.filter((opt) => {\n                return opt.selected;\n            }, false);\n        }\n        getSelectedIDs() {\n            let selectedOptions = this.getSelectedOptions();\n            let selectedIDs = [];\n            selectedOptions.forEach((op) => {\n                selectedIDs.push(op.id);\n            });\n            return selectedIDs;\n        }\n        getOptgroupByID(id) {\n            for (let dataObj of this.data) {\n                if (dataObj instanceof Optgroup && dataObj.id === id) {\n                    return dataObj;\n                }\n            }\n            return null;\n        }\n        getOptionByID(id) {\n            let options = this.filter((opt) => {\n                return opt.id === id;\n            }, false);\n            return options.length ? options[0] : null;\n        }\n        search(search, searchFilter) {\n            search = search.trim();\n            if (search === '') {\n                return this.getData();\n            }\n            return this.filter((opt) => {\n                return searchFilter(opt, search);\n            }, true);\n        }\n        filter(filter, includeOptgroup) {\n            const dataSearch = [];\n            this.data.forEach((dataObj) => {\n                if (dataObj instanceof Optgroup) {\n                    let optOptions = [];\n                    dataObj.options.forEach((option) => {\n                        if (!filter || filter(option)) {\n                            if (!includeOptgroup) {\n                                dataSearch.push(new Option(option));\n                            }\n                            else {\n                                optOptions.push(new Option(option));\n                            }\n                        }\n                    });\n                    if (optOptions.length > 0) {\n                        let optgroup = new Optgroup(dataObj);\n                        optgroup.options = optOptions;\n                        dataSearch.push(optgroup);\n                    }\n                }\n                if (dataObj instanceof Option) {\n                    if (!filter || filter(dataObj)) {\n                        dataSearch.push(new Option(dataObj));\n                    }\n                }\n            });\n            return dataSearch;\n        }\n        getSelectType() {\n            return this.selectType;\n        }\n    }\n\n    class Render {\n        constructor(settings, store, callbacks) {\n            this.classes = {\n                main: 'ss-main',\n                placeholder: 'ss-placeholder',\n                values: 'ss-values',\n                single: 'ss-single',\n                max: 'ss-max',\n                value: 'ss-value',\n                valueText: 'ss-value-text',\n                valueDelete: 'ss-value-delete',\n                valueOut: 'ss-value-out',\n                deselect: 'ss-deselect',\n                deselectPath: 'M10,10 L90,90 M10,90 L90,10',\n                arrow: 'ss-arrow',\n                arrowClose: 'M10,30 L50,70 L90,30',\n                arrowOpen: 'M10,70 L50,30 L90,70',\n                content: 'ss-content',\n                openAbove: 'ss-open-above',\n                openBelow: 'ss-open-below',\n                search: 'ss-search',\n                searchHighlighter: 'ss-search-highlight',\n                searching: 'ss-searching',\n                addable: 'ss-addable',\n                addablePath: 'M50,10 L50,90 M10,50 L90,50',\n                list: 'ss-list',\n                optgroup: 'ss-optgroup',\n                optgroupLabel: 'ss-optgroup-label',\n                optgroupLabelText: 'ss-optgroup-label-text',\n                optgroupActions: 'ss-optgroup-actions',\n                optgroupSelectAll: 'ss-selectall',\n                optgroupSelectAllBox: 'M60,10 L10,10 L10,90 L90,90 L90,50',\n                optgroupSelectAllCheck: 'M30,45 L50,70 L90,10',\n                optgroupClosable: 'ss-closable',\n                option: 'ss-option',\n                optionDelete: 'M10,10 L90,90 M10,90 L90,10',\n                highlighted: 'ss-highlighted',\n                open: 'ss-open',\n                close: 'ss-close',\n                selected: 'ss-selected',\n                error: 'ss-error',\n                disabled: 'ss-disabled',\n                hide: 'ss-hide',\n            };\n            this.store = store;\n            this.settings = settings;\n            this.callbacks = callbacks;\n            this.main = this.mainDiv();\n            this.content = this.contentDiv();\n            this.updateClassStyles();\n            this.updateAriaAttributes();\n            this.settings.contentLocation.appendChild(this.content.main);\n        }\n        enable() {\n            this.main.main.classList.remove(this.classes.disabled);\n            this.content.search.input.disabled = false;\n        }\n        disable() {\n            this.main.main.classList.add(this.classes.disabled);\n            this.content.search.input.disabled = true;\n        }\n        open() {\n            this.main.arrow.path.setAttribute('d', this.classes.arrowOpen);\n            this.main.main.classList.add(this.settings.openPosition === 'up' ? this.classes.openAbove : this.classes.openBelow);\n            this.main.main.setAttribute('aria-expanded', 'true');\n            this.moveContent();\n            const selectedOptions = this.store.getSelectedOptions();\n            if (selectedOptions.length) {\n                const selectedId = selectedOptions[selectedOptions.length - 1].id;\n                const selectedOption = this.content.list.querySelector('[data-id=\"' + selectedId + '\"]');\n                if (selectedOption) {\n                    this.ensureElementInView(this.content.list, selectedOption);\n                }\n            }\n        }\n        close() {\n            this.main.main.classList.remove(this.classes.openAbove);\n            this.main.main.classList.remove(this.classes.openBelow);\n            this.main.main.setAttribute('aria-expanded', 'false');\n            this.content.main.classList.remove(this.classes.openAbove);\n            this.content.main.classList.remove(this.classes.openBelow);\n            this.main.arrow.path.setAttribute('d', this.classes.arrowClose);\n        }\n        updateClassStyles() {\n            this.main.main.className = '';\n            this.main.main.removeAttribute('style');\n            this.content.main.className = '';\n            this.content.main.removeAttribute('style');\n            this.main.main.classList.add(this.classes.main);\n            this.content.main.classList.add(this.classes.content);\n            if (this.settings.style !== '') {\n                this.main.main.style.cssText = this.settings.style;\n                this.content.main.style.cssText = this.settings.style;\n            }\n            if (this.settings.class.length) {\n                for (const c of this.settings.class) {\n                    if (c.trim() !== '') {\n                        this.main.main.classList.add(c.trim());\n                        this.content.main.classList.add(c.trim());\n                    }\n                }\n            }\n            if (this.settings.contentPosition === 'relative') {\n                this.content.main.classList.add('ss-' + this.settings.contentPosition);\n            }\n        }\n        updateAriaAttributes() {\n            this.main.main.role = 'combobox';\n            this.main.main.setAttribute('aria-haspopup', 'listbox');\n            this.main.main.setAttribute('aria-controls', this.content.main.id);\n            this.main.main.setAttribute('aria-expanded', 'false');\n            this.content.main.setAttribute('role', 'listbox');\n        }\n        mainDiv() {\n            var _a;\n            const main = document.createElement('div');\n            main.dataset.id = this.settings.id;\n            main.id = this.settings.id;\n            main.tabIndex = 0;\n            main.onkeydown = (e) => {\n                switch (e.key) {\n                    case 'ArrowUp':\n                    case 'ArrowDown':\n                        this.callbacks.open();\n                        e.key === 'ArrowDown' ? this.highlight('down') : this.highlight('up');\n                        return false;\n                    case 'Tab':\n                        this.callbacks.close();\n                        return true;\n                    case 'Enter':\n                    case ' ':\n                        this.callbacks.open();\n                        const highlighted = this.content.list.querySelector('.' + this.classes.highlighted);\n                        if (highlighted) {\n                            highlighted.click();\n                        }\n                        return false;\n                    case 'Escape':\n                        this.callbacks.close();\n                        return false;\n                }\n            };\n            main.onclick = (e) => {\n                if (this.settings.disabled) {\n                    return;\n                }\n                this.settings.isOpen ? this.callbacks.close() : this.callbacks.open();\n            };\n            const values = document.createElement('div');\n            values.classList.add(this.classes.values);\n            main.appendChild(values);\n            const deselect = document.createElement('div');\n            deselect.classList.add(this.classes.deselect);\n            const selectedOptions = (_a = this.store) === null || _a === void 0 ? void 0 : _a.getSelectedOptions();\n            if (!this.settings.allowDeselect || (this.settings.isMultiple && selectedOptions && selectedOptions.length <= 0)) {\n                deselect.classList.add(this.classes.hide);\n            }\n            else {\n                deselect.classList.remove(this.classes.hide);\n            }\n            deselect.onclick = (e) => {\n                e.stopPropagation();\n                if (this.settings.disabled) {\n                    return;\n                }\n                let shouldDelete = true;\n                const before = this.store.getSelectedOptions();\n                const after = [];\n                if (this.callbacks.beforeChange) {\n                    shouldDelete = this.callbacks.beforeChange(after, before) === true;\n                }\n                if (shouldDelete) {\n                    if (this.settings.isMultiple) {\n                        this.callbacks.setSelected([], false);\n                        this.updateDeselectAll();\n                    }\n                    else {\n                        this.callbacks.setSelected([''], false);\n                    }\n                    if (this.settings.closeOnSelect) {\n                        this.callbacks.close();\n                    }\n                    if (this.callbacks.afterChange) {\n                        this.callbacks.afterChange(after);\n                    }\n                }\n            };\n            const deselectSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n            deselectSvg.setAttribute('viewBox', '0 0 100 100');\n            const deselectPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            deselectPath.setAttribute('d', this.classes.deselectPath);\n            deselectSvg.appendChild(deselectPath);\n            deselect.appendChild(deselectSvg);\n            main.appendChild(deselect);\n            const arrow = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n            arrow.classList.add(this.classes.arrow);\n            arrow.setAttribute('viewBox', '0 0 100 100');\n            const arrowPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            arrowPath.setAttribute('d', this.classes.arrowClose);\n            if (this.settings.alwaysOpen) {\n                arrow.classList.add(this.classes.hide);\n            }\n            arrow.appendChild(arrowPath);\n            main.appendChild(arrow);\n            return {\n                main: main,\n                values: values,\n                deselect: {\n                    main: deselect,\n                    svg: deselectSvg,\n                    path: deselectPath,\n                },\n                arrow: {\n                    main: arrow,\n                    path: arrowPath,\n                },\n            };\n        }\n        mainFocus(eventType) {\n            if (eventType !== 'click') {\n                this.main.main.focus({ preventScroll: true });\n            }\n        }\n        placeholder() {\n            const placeholderOption = this.store.filter((o) => o.placeholder, false);\n            let placeholderText = this.settings.placeholderText;\n            if (placeholderOption.length) {\n                if (placeholderOption[0].html !== '') {\n                    placeholderText = placeholderOption[0].html;\n                }\n                else if (placeholderOption[0].text !== '') {\n                    placeholderText = placeholderOption[0].text;\n                }\n            }\n            const placeholder = document.createElement('div');\n            placeholder.classList.add(this.classes.placeholder);\n            placeholder.innerHTML = placeholderText;\n            return placeholder;\n        }\n        renderValues() {\n            if (!this.settings.isMultiple) {\n                this.renderSingleValue();\n                return;\n            }\n            this.renderMultipleValues();\n        }\n        renderSingleValue() {\n            const selected = this.store.filter((o) => {\n                return o.selected && !o.placeholder;\n            }, false);\n            const selectedSingle = selected.length > 0 ? selected[0] : null;\n            if (!selectedSingle) {\n                this.main.values.innerHTML = this.placeholder().outerHTML;\n            }\n            else {\n                const singleValue = document.createElement('div');\n                singleValue.classList.add(this.classes.single);\n                if (selectedSingle.html) {\n                    singleValue.innerHTML = selectedSingle.html;\n                }\n                else {\n                    singleValue.innerText = selectedSingle.text;\n                }\n                this.main.values.innerHTML = singleValue.outerHTML;\n            }\n            if (!this.settings.allowDeselect || !selected.length) {\n                this.main.deselect.main.classList.add(this.classes.hide);\n            }\n            else {\n                this.main.deselect.main.classList.remove(this.classes.hide);\n            }\n        }\n        renderMultipleValues() {\n            let currentNodes = this.main.values.childNodes;\n            let selectedOptions = this.store.filter((opt) => {\n                return opt.selected && opt.display;\n            }, false);\n            if (selectedOptions.length === 0) {\n                this.main.values.innerHTML = this.placeholder().outerHTML;\n                return;\n            }\n            else {\n                const placeholder = this.main.values.querySelector('.' + this.classes.placeholder);\n                if (placeholder) {\n                    placeholder.remove();\n                }\n            }\n            if (selectedOptions.length > this.settings.maxValuesShown) {\n                const singleValue = document.createElement('div');\n                singleValue.classList.add(this.classes.max);\n                singleValue.textContent = this.settings.maxValuesMessage.replace('{number}', selectedOptions.length.toString());\n                this.main.values.innerHTML = singleValue.outerHTML;\n                return;\n            }\n            else {\n                const maxValuesMessage = this.main.values.querySelector('.' + this.classes.max);\n                if (maxValuesMessage) {\n                    maxValuesMessage.remove();\n                }\n            }\n            let removeNodes = [];\n            for (let i = 0; i < currentNodes.length; i++) {\n                const node = currentNodes[i];\n                const id = node.getAttribute('data-id');\n                if (id) {\n                    const found = selectedOptions.filter((opt) => {\n                        return opt.id === id;\n                    }, false);\n                    if (!found.length) {\n                        removeNodes.push(node);\n                    }\n                }\n            }\n            for (const n of removeNodes) {\n                n.classList.add(this.classes.valueOut);\n                setTimeout(() => {\n                    if (this.main.values.hasChildNodes() && this.main.values.contains(n)) {\n                        this.main.values.removeChild(n);\n                    }\n                }, 100);\n            }\n            currentNodes = this.main.values.childNodes;\n            for (let d = 0; d < selectedOptions.length; d++) {\n                let shouldAdd = true;\n                for (let i = 0; i < currentNodes.length; i++) {\n                    if (selectedOptions[d].id === String(currentNodes[i].dataset.id)) {\n                        shouldAdd = false;\n                    }\n                }\n                if (shouldAdd) {\n                    if (currentNodes.length === 0) {\n                        this.main.values.appendChild(this.multipleValue(selectedOptions[d]));\n                    }\n                    else if (d === 0) {\n                        this.main.values.insertBefore(this.multipleValue(selectedOptions[d]), currentNodes[d]);\n                    }\n                    else {\n                        currentNodes[d - 1].insertAdjacentElement('afterend', this.multipleValue(selectedOptions[d]));\n                    }\n                }\n            }\n            this.updateDeselectAll();\n        }\n        multipleValue(option) {\n            const value = document.createElement('div');\n            value.classList.add(this.classes.value);\n            value.dataset.id = option.id;\n            const text = document.createElement('div');\n            text.classList.add(this.classes.valueText);\n            text.innerText = option.text;\n            value.appendChild(text);\n            if (!option.mandatory) {\n                const deleteDiv = document.createElement('div');\n                deleteDiv.classList.add(this.classes.valueDelete);\n                deleteDiv.onclick = (e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    if (this.settings.disabled) {\n                        return;\n                    }\n                    let shouldDelete = true;\n                    const before = this.store.getSelectedOptions();\n                    const after = before.filter((o) => {\n                        return o.selected && o.id !== option.id;\n                    }, true);\n                    if (this.settings.minSelected && after.length < this.settings.minSelected) {\n                        return;\n                    }\n                    if (this.callbacks.beforeChange) {\n                        shouldDelete = this.callbacks.beforeChange(after, before) === true;\n                    }\n                    if (shouldDelete) {\n                        let selectedValues = [];\n                        for (const o of after) {\n                            if (o instanceof Optgroup) {\n                                for (const c of o.options) {\n                                    selectedValues.push(c.value);\n                                }\n                            }\n                            if (o instanceof Option) {\n                                selectedValues.push(o.value);\n                            }\n                        }\n                        this.callbacks.setSelected(selectedValues, false);\n                        if (this.settings.closeOnSelect) {\n                            this.callbacks.close();\n                        }\n                        if (this.callbacks.afterChange) {\n                            this.callbacks.afterChange(after);\n                        }\n                        this.updateDeselectAll();\n                    }\n                };\n                const deleteSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n                deleteSvg.setAttribute('viewBox', '0 0 100 100');\n                const deletePath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                deletePath.setAttribute('d', this.classes.optionDelete);\n                deleteSvg.appendChild(deletePath);\n                deleteDiv.appendChild(deleteSvg);\n                value.appendChild(deleteDiv);\n            }\n            return value;\n        }\n        contentDiv() {\n            const main = document.createElement('div');\n            main.dataset.id = this.settings.id;\n            main.id = this.settings.id;\n            const search = this.searchDiv();\n            main.appendChild(search.main);\n            const list = this.listDiv();\n            main.appendChild(list);\n            return {\n                main: main,\n                search: search,\n                list: list,\n            };\n        }\n        moveContent() {\n            if (this.settings.contentPosition === 'relative') {\n                this.moveContentBelow();\n                return;\n            }\n            if (this.settings.openPosition === 'down') {\n                this.moveContentBelow();\n                return;\n            }\n            else if (this.settings.openPosition === 'up') {\n                this.moveContentAbove();\n                return;\n            }\n            if (this.putContent() === 'up') {\n                this.moveContentAbove();\n            }\n            else {\n                this.moveContentBelow();\n            }\n        }\n        searchDiv() {\n            const main = document.createElement('div');\n            const input = document.createElement('input');\n            const addable = document.createElement('div');\n            main.classList.add(this.classes.search);\n            const searchReturn = {\n                main,\n                input,\n            };\n            if (!this.settings.showSearch) {\n                main.classList.add(this.classes.hide);\n                input.readOnly = true;\n            }\n            input.type = 'search';\n            input.placeholder = this.settings.searchPlaceholder;\n            input.tabIndex = -1;\n            input.setAttribute('aria-label', this.settings.searchPlaceholder);\n            input.setAttribute('autocapitalize', 'off');\n            input.setAttribute('autocomplete', 'off');\n            input.setAttribute('autocorrect', 'off');\n            input.oninput = debounce((e) => {\n                this.callbacks.search(e.target.value);\n            }, 100);\n            input.onkeydown = (e) => {\n                switch (e.key) {\n                    case 'ArrowUp':\n                    case 'ArrowDown':\n                        e.key === 'ArrowDown' ? this.highlight('down') : this.highlight('up');\n                        return false;\n                    case 'Tab':\n                        this.callbacks.close();\n                        return true;\n                    case 'Escape':\n                        this.callbacks.close();\n                        return false;\n                    case 'Enter':\n                    case ' ':\n                        if (this.callbacks.addable && e.ctrlKey) {\n                            addable.click();\n                            return false;\n                        }\n                        else {\n                            const highlighted = this.content.list.querySelector('.' + this.classes.highlighted);\n                            if (highlighted) {\n                                highlighted.click();\n                                return false;\n                            }\n                        }\n                        return true;\n                }\n            };\n            main.appendChild(input);\n            if (this.callbacks.addable) {\n                addable.classList.add(this.classes.addable);\n                const plus = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n                plus.setAttribute('viewBox', '0 0 100 100');\n                const plusPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                plusPath.setAttribute('d', this.classes.addablePath);\n                plus.appendChild(plusPath);\n                addable.appendChild(plus);\n                addable.onclick = (e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    if (!this.callbacks.addable) {\n                        return;\n                    }\n                    const inputValue = this.content.search.input.value.trim();\n                    if (inputValue === '') {\n                        this.content.search.input.focus();\n                        return;\n                    }\n                    const runFinish = (oo) => {\n                        let newOption = new Option(oo);\n                        this.callbacks.addOption(newOption);\n                        if (this.settings.isMultiple) {\n                            let values = this.store.getSelected();\n                            values.push(newOption.value);\n                            this.callbacks.setSelected(values, true);\n                        }\n                        else {\n                            this.callbacks.setSelected([newOption.value], true);\n                        }\n                        this.callbacks.search('');\n                        if (this.settings.closeOnSelect) {\n                            setTimeout(() => {\n                                this.callbacks.close();\n                            }, 100);\n                        }\n                    };\n                    const addableValue = this.callbacks.addable(inputValue);\n                    if (addableValue === false || addableValue === undefined || addableValue === null) {\n                        return;\n                    }\n                    if (addableValue instanceof Promise) {\n                        addableValue.then((value) => {\n                            if (typeof value === 'string') {\n                                runFinish({\n                                    text: value,\n                                    value: value,\n                                });\n                            }\n                            else {\n                                runFinish(value);\n                            }\n                        });\n                    }\n                    else if (typeof addableValue === 'string') {\n                        runFinish({\n                            text: addableValue,\n                            value: addableValue,\n                        });\n                    }\n                    else {\n                        runFinish(addableValue);\n                    }\n                    return;\n                };\n                main.appendChild(addable);\n                searchReturn.addable = {\n                    main: addable,\n                    svg: plus,\n                    path: plusPath,\n                };\n            }\n            return searchReturn;\n        }\n        searchFocus() {\n            this.content.search.input.focus();\n        }\n        getOptions(notPlaceholder = false, notDisabled = false, notHidden = false) {\n            let query = '.' + this.classes.option;\n            if (notPlaceholder) {\n                query += ':not(.' + this.classes.placeholder + ')';\n            }\n            if (notDisabled) {\n                query += ':not(.' + this.classes.disabled + ')';\n            }\n            if (notHidden) {\n                query += ':not(.' + this.classes.hide + ')';\n            }\n            return Array.from(this.content.list.querySelectorAll(query));\n        }\n        highlight(dir) {\n            const options = this.getOptions(true, true, true);\n            if (options.length === 0) {\n                return;\n            }\n            if (options.length === 1) {\n                if (!options[0].classList.contains(this.classes.highlighted)) {\n                    options[0].classList.add(this.classes.highlighted);\n                    return;\n                }\n            }\n            for (let i = 0; i < options.length; i++) {\n                if (options[i].classList.contains(this.classes.highlighted)) {\n                    const prevOption = options[i];\n                    prevOption.classList.remove(this.classes.highlighted);\n                    const prevParent = prevOption.parentElement;\n                    if (prevParent && prevParent.classList.contains(this.classes.open)) {\n                        const optgroupLabel = prevParent.querySelector('.' + this.classes.optgroupLabel);\n                        if (optgroupLabel) {\n                            optgroupLabel.click();\n                        }\n                    }\n                    let selectOption = options[dir === 'down' ? (i + 1 < options.length ? i + 1 : 0) : i - 1 >= 0 ? i - 1 : options.length - 1];\n                    selectOption.classList.add(this.classes.highlighted);\n                    this.ensureElementInView(this.content.list, selectOption);\n                    const selectParent = selectOption.parentElement;\n                    if (selectParent && selectParent.classList.contains(this.classes.close)) {\n                        const optgroupLabel = selectParent.querySelector('.' + this.classes.optgroupLabel);\n                        if (optgroupLabel) {\n                            optgroupLabel.click();\n                        }\n                    }\n                    return;\n                }\n            }\n            options[dir === 'down' ? 0 : options.length - 1].classList.add(this.classes.highlighted);\n            this.ensureElementInView(this.content.list, options[dir === 'down' ? 0 : options.length - 1]);\n        }\n        listDiv() {\n            const options = document.createElement('div');\n            options.classList.add(this.classes.list);\n            return options;\n        }\n        renderError(error) {\n            this.content.list.innerHTML = '';\n            const errorDiv = document.createElement('div');\n            errorDiv.classList.add(this.classes.error);\n            errorDiv.textContent = error;\n            this.content.list.appendChild(errorDiv);\n        }\n        renderSearching() {\n            this.content.list.innerHTML = '';\n            const searchingDiv = document.createElement('div');\n            searchingDiv.classList.add(this.classes.searching);\n            searchingDiv.textContent = this.settings.searchingText;\n            this.content.list.appendChild(searchingDiv);\n        }\n        renderOptions(data) {\n            this.content.list.innerHTML = '';\n            if (data.length === 0) {\n                const noResults = document.createElement('div');\n                noResults.classList.add(this.classes.search);\n                noResults.innerHTML = this.settings.searchText;\n                this.content.list.appendChild(noResults);\n                return;\n            }\n            for (const d of data) {\n                if (d instanceof Optgroup) {\n                    const optgroupEl = document.createElement('div');\n                    optgroupEl.classList.add(this.classes.optgroup);\n                    const optgroupLabel = document.createElement('div');\n                    optgroupLabel.classList.add(this.classes.optgroupLabel);\n                    optgroupEl.appendChild(optgroupLabel);\n                    const optgroupLabelText = document.createElement('div');\n                    optgroupLabelText.classList.add(this.classes.optgroupLabelText);\n                    optgroupLabelText.textContent = d.label;\n                    optgroupLabel.appendChild(optgroupLabelText);\n                    const optgroupActions = document.createElement('div');\n                    optgroupActions.classList.add(this.classes.optgroupActions);\n                    optgroupLabel.appendChild(optgroupActions);\n                    if (this.settings.isMultiple && d.selectAll) {\n                        const selectAll = document.createElement('div');\n                        selectAll.classList.add(this.classes.optgroupSelectAll);\n                        let allSelected = true;\n                        for (const o of d.options) {\n                            if (!o.selected) {\n                                allSelected = false;\n                                break;\n                            }\n                        }\n                        if (allSelected) {\n                            selectAll.classList.add(this.classes.selected);\n                        }\n                        const selectAllText = document.createElement('span');\n                        selectAllText.textContent = 'Select All';\n                        selectAll.appendChild(selectAllText);\n                        const selectAllSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n                        selectAllSvg.setAttribute('viewBox', '0 0 100 100');\n                        selectAll.appendChild(selectAllSvg);\n                        const selectAllBox = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                        selectAllBox.setAttribute('d', this.classes.optgroupSelectAllBox);\n                        selectAllSvg.appendChild(selectAllBox);\n                        const selectAllCheck = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                        selectAllCheck.setAttribute('d', this.classes.optgroupSelectAllCheck);\n                        selectAllSvg.appendChild(selectAllCheck);\n                        selectAll.addEventListener('click', (e) => {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            const currentSelected = this.store.getSelected();\n                            if (allSelected) {\n                                const newSelected = currentSelected.filter((s) => {\n                                    for (const o of d.options) {\n                                        if (s === o.value) {\n                                            return false;\n                                        }\n                                    }\n                                    return true;\n                                });\n                                this.callbacks.setSelected(newSelected, true);\n                                return;\n                            }\n                            else {\n                                const newSelected = currentSelected.concat(d.options.map((o) => o.value));\n                                this.callbacks.setSelected(newSelected, true);\n                            }\n                        });\n                        optgroupActions.appendChild(selectAll);\n                    }\n                    if (d.closable !== 'off') {\n                        const optgroupClosable = document.createElement('div');\n                        optgroupClosable.classList.add(this.classes.optgroupClosable);\n                        const optgroupClosableSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n                        optgroupClosableSvg.setAttribute('viewBox', '0 0 100 100');\n                        optgroupClosableSvg.classList.add(this.classes.arrow);\n                        optgroupClosable.appendChild(optgroupClosableSvg);\n                        const optgroupClosableArrow = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                        optgroupClosableSvg.appendChild(optgroupClosableArrow);\n                        if (d.options.some((o) => o.selected) || this.content.search.input.value.trim() !== '') {\n                            optgroupClosable.classList.add(this.classes.open);\n                            optgroupClosableArrow.setAttribute('d', this.classes.arrowOpen);\n                        }\n                        else if (d.closable === 'open') {\n                            optgroupEl.classList.add(this.classes.open);\n                            optgroupClosableArrow.setAttribute('d', this.classes.arrowOpen);\n                        }\n                        else if (d.closable === 'close') {\n                            optgroupEl.classList.add(this.classes.close);\n                            optgroupClosableArrow.setAttribute('d', this.classes.arrowClose);\n                        }\n                        optgroupLabel.addEventListener('click', (e) => {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            if (optgroupEl.classList.contains(this.classes.close)) {\n                                optgroupEl.classList.remove(this.classes.close);\n                                optgroupEl.classList.add(this.classes.open);\n                                optgroupClosableArrow.setAttribute('d', this.classes.arrowOpen);\n                            }\n                            else {\n                                optgroupEl.classList.remove(this.classes.open);\n                                optgroupEl.classList.add(this.classes.close);\n                                optgroupClosableArrow.setAttribute('d', this.classes.arrowClose);\n                            }\n                        });\n                        optgroupActions.appendChild(optgroupClosable);\n                    }\n                    optgroupEl.appendChild(optgroupLabel);\n                    for (const o of d.options) {\n                        optgroupEl.appendChild(this.option(o));\n                    }\n                    this.content.list.appendChild(optgroupEl);\n                }\n                if (d instanceof Option) {\n                    this.content.list.appendChild(this.option(d));\n                }\n            }\n        }\n        option(option) {\n            if (option.placeholder) {\n                const placeholder = document.createElement('div');\n                placeholder.classList.add(this.classes.option);\n                placeholder.classList.add(this.classes.hide);\n                return placeholder;\n            }\n            const optionEl = document.createElement('div');\n            optionEl.dataset.id = option.id;\n            optionEl.id = option.id;\n            optionEl.classList.add(this.classes.option);\n            optionEl.setAttribute('role', 'option');\n            if (option.class) {\n                option.class.split(' ').forEach((dataClass) => {\n                    optionEl.classList.add(dataClass);\n                });\n            }\n            if (option.style) {\n                optionEl.style.cssText = option.style;\n            }\n            if (this.settings.searchHighlight && this.content.search.input.value.trim() !== '') {\n                optionEl.innerHTML = this.highlightText(option.html !== '' ? option.html : option.text, this.content.search.input.value, this.classes.searchHighlighter);\n            }\n            else if (option.html !== '') {\n                optionEl.innerHTML = option.html;\n            }\n            else {\n                optionEl.textContent = option.text;\n            }\n            if (this.settings.showOptionTooltips && optionEl.textContent) {\n                optionEl.setAttribute('title', optionEl.textContent);\n            }\n            if (!option.display) {\n                optionEl.classList.add(this.classes.hide);\n            }\n            if (option.disabled) {\n                optionEl.classList.add(this.classes.disabled);\n            }\n            if (option.selected && this.settings.hideSelected) {\n                optionEl.classList.add(this.classes.hide);\n            }\n            if (option.selected) {\n                optionEl.classList.add(this.classes.selected);\n                optionEl.setAttribute('aria-selected', 'true');\n                this.main.main.setAttribute('aria-activedescendant', optionEl.id);\n            }\n            else {\n                optionEl.classList.remove(this.classes.selected);\n                optionEl.setAttribute('aria-selected', 'false');\n            }\n            optionEl.addEventListener('click', (e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                const selectedOptions = this.store.getSelected();\n                const element = e.currentTarget;\n                const elementID = String(element.dataset.id);\n                if (option.disabled || (option.selected && !this.settings.allowDeselect)) {\n                    return;\n                }\n                if ((this.settings.isMultiple && this.settings.maxSelected <= selectedOptions.length && !option.selected) ||\n                    (this.settings.isMultiple && this.settings.minSelected >= selectedOptions.length && option.selected)) {\n                    return;\n                }\n                let shouldUpdate = false;\n                const before = this.store.getSelectedOptions();\n                let after = [];\n                if (this.settings.isMultiple) {\n                    if (option.selected) {\n                        after = before.filter((o) => o.id !== elementID);\n                    }\n                    else {\n                        after = before.concat(option);\n                    }\n                }\n                if (!this.settings.isMultiple) {\n                    if (option.selected) {\n                        after = [];\n                    }\n                    else {\n                        after = [option];\n                    }\n                }\n                if (!this.callbacks.beforeChange) {\n                    shouldUpdate = true;\n                }\n                if (this.callbacks.beforeChange) {\n                    if (this.callbacks.beforeChange(after, before) === false) {\n                        shouldUpdate = false;\n                    }\n                    else {\n                        shouldUpdate = true;\n                    }\n                }\n                if (shouldUpdate) {\n                    if (!this.store.getOptionByID(elementID)) {\n                        this.callbacks.addOption(option);\n                    }\n                    this.callbacks.setSelected(after.map((o) => o.value), false);\n                    if (this.settings.closeOnSelect) {\n                        this.callbacks.close();\n                    }\n                    if (this.callbacks.afterChange) {\n                        this.callbacks.afterChange(after);\n                    }\n                }\n            });\n            return optionEl;\n        }\n        destroy() {\n            this.main.main.remove();\n            this.content.main.remove();\n        }\n        highlightText(str, search, className) {\n            let completedString = str;\n            const regex = new RegExp('(' + search.trim() + ')(?![^<]*>[^<>]*</)', 'i');\n            if (!str.match(regex)) {\n                return str;\n            }\n            const matchStartPosition = str.match(regex).index;\n            const matchEndPosition = matchStartPosition + str.match(regex)[0].toString().length;\n            const originalTextFoundByRegex = str.substring(matchStartPosition, matchEndPosition);\n            completedString = completedString.replace(regex, `<mark class=\"${className}\">${originalTextFoundByRegex}</mark>`);\n            return completedString;\n        }\n        moveContentAbove() {\n            const mainHeight = this.main.main.offsetHeight;\n            const contentHeight = this.content.main.offsetHeight;\n            this.main.main.classList.remove(this.classes.openBelow);\n            this.main.main.classList.add(this.classes.openAbove);\n            this.content.main.classList.remove(this.classes.openBelow);\n            this.content.main.classList.add(this.classes.openAbove);\n            const containerRect = this.main.main.getBoundingClientRect();\n            this.content.main.style.margin = '-' + (mainHeight + contentHeight - 1) + 'px 0px 0px 0px';\n            this.content.main.style.top = containerRect.top + containerRect.height + window.scrollY + 'px';\n            this.content.main.style.left = containerRect.left + window.scrollX + 'px';\n            this.content.main.style.width = containerRect.width + 'px';\n        }\n        moveContentBelow() {\n            this.main.main.classList.remove(this.classes.openAbove);\n            this.main.main.classList.add(this.classes.openBelow);\n            this.content.main.classList.remove(this.classes.openAbove);\n            this.content.main.classList.add(this.classes.openBelow);\n            const containerRect = this.main.main.getBoundingClientRect();\n            this.content.main.style.margin = '-1px 0px 0px 0px';\n            if (this.settings.contentPosition !== 'relative') {\n                this.content.main.style.top = containerRect.top + containerRect.height + window.scrollY + 'px';\n                this.content.main.style.left = containerRect.left + window.scrollX + 'px';\n                this.content.main.style.width = containerRect.width + 'px';\n            }\n        }\n        ensureElementInView(container, element) {\n            const cTop = container.scrollTop + container.offsetTop;\n            const cBottom = cTop + container.clientHeight;\n            const eTop = element.offsetTop;\n            const eBottom = eTop + element.clientHeight;\n            if (eTop < cTop) {\n                container.scrollTop -= cTop - eTop;\n            }\n            else if (eBottom > cBottom) {\n                container.scrollTop += eBottom - cBottom;\n            }\n        }\n        putContent() {\n            const mainHeight = this.main.main.offsetHeight;\n            const mainRect = this.main.main.getBoundingClientRect();\n            const contentHeight = this.content.main.offsetHeight;\n            const spaceBelow = window.innerHeight - (mainRect.top + mainHeight);\n            if (spaceBelow <= contentHeight) {\n                if (mainRect.top > contentHeight) {\n                    return 'up';\n                }\n                else {\n                    return 'down';\n                }\n            }\n            return 'down';\n        }\n        updateDeselectAll() {\n            if (!this.store || !this.settings) {\n                return;\n            }\n            const selected = this.store.getSelectedOptions();\n            const hasSelectedItems = selected && selected.length > 0;\n            const isMultiple = this.settings.isMultiple;\n            const allowDeselect = this.settings.allowDeselect;\n            const deselectButton = this.main.deselect.main;\n            const hideClass = this.classes.hide;\n            if (allowDeselect && !(isMultiple && !hasSelectedItems)) {\n                deselectButton.classList.remove(hideClass);\n            }\n            else {\n                deselectButton.classList.add(hideClass);\n            }\n        }\n    }\n\n    class Select {\n        constructor(select) {\n            this.listen = false;\n            this.observer = null;\n            this.select = select;\n            this.select.addEventListener('change', this.valueChange.bind(this), {\n                passive: true,\n            });\n            this.observer = new MutationObserver(this.observeCall.bind(this));\n            this.changeListen(true);\n        }\n        enable() {\n            this.select.disabled = false;\n        }\n        disable() {\n            this.select.disabled = true;\n        }\n        hideUI() {\n            this.select.tabIndex = -1;\n            this.select.style.display = 'none';\n            this.select.setAttribute('aria-hidden', 'true');\n        }\n        showUI() {\n            this.select.removeAttribute('tabindex');\n            this.select.style.display = '';\n            this.select.removeAttribute('aria-hidden');\n        }\n        changeListen(listen) {\n            this.listen = listen;\n            if (listen) {\n                if (this.observer) {\n                    this.observer.observe(this.select, {\n                        subtree: true,\n                        childList: true,\n                        attributes: true,\n                    });\n                }\n            }\n            if (!listen) {\n                if (this.observer) {\n                    this.observer.disconnect();\n                }\n            }\n        }\n        valueChange(ev) {\n            if (this.listen && this.onValueChange) {\n                this.onValueChange(this.getSelectedValues());\n            }\n            return true;\n        }\n        observeCall(mutations) {\n            if (!this.listen) {\n                return;\n            }\n            let classChanged = false;\n            let disabledChanged = false;\n            let optgroupOptionChanged = false;\n            for (const m of mutations) {\n                if (m.target === this.select) {\n                    if (m.attributeName === 'disabled') {\n                        disabledChanged = true;\n                    }\n                    if (m.attributeName === 'class') {\n                        classChanged = true;\n                    }\n                }\n                if (m.target.nodeName === 'OPTGROUP' || m.target.nodeName === 'OPTION') {\n                    optgroupOptionChanged = true;\n                }\n            }\n            if (classChanged && this.onClassChange) {\n                this.onClassChange(this.select.className.split(' '));\n            }\n            if (disabledChanged && this.onDisabledChange) {\n                this.changeListen(false);\n                this.onDisabledChange(this.select.disabled);\n                this.changeListen(true);\n            }\n            if (optgroupOptionChanged && this.onOptionsChange) {\n                this.changeListen(false);\n                this.onOptionsChange(this.getData());\n                this.changeListen(true);\n            }\n        }\n        getData() {\n            let data = [];\n            const nodes = this.select.childNodes;\n            for (const n of nodes) {\n                if (n.nodeName === 'OPTGROUP') {\n                    data.push(this.getDataFromOptgroup(n));\n                }\n                if (n.nodeName === 'OPTION') {\n                    data.push(this.getDataFromOption(n));\n                }\n            }\n            return data;\n        }\n        getDataFromOptgroup(optgroup) {\n            let data = {\n                id: optgroup.id,\n                label: optgroup.label,\n                selectAll: optgroup.dataset ? optgroup.dataset.selectall === 'true' : false,\n                closable: optgroup.dataset ? optgroup.dataset.closable : 'off',\n                options: [],\n            };\n            const options = optgroup.childNodes;\n            for (const o of options) {\n                if (o.nodeName === 'OPTION') {\n                    data.options.push(this.getDataFromOption(o));\n                }\n            }\n            return data;\n        }\n        getDataFromOption(option) {\n            return {\n                id: option.id,\n                value: option.value,\n                text: option.text,\n                html: option.dataset && option.dataset.html ? option.dataset.html : '',\n                selected: option.selected,\n                display: option.style.display === 'none' ? false : true,\n                disabled: option.disabled,\n                mandatory: option.dataset ? option.dataset.mandatory === 'true' : false,\n                placeholder: option.dataset.placeholder === 'true',\n                class: option.className,\n                style: option.style.cssText,\n                data: option.dataset,\n            };\n        }\n        getSelectedValues() {\n            let values = [];\n            const options = this.select.childNodes;\n            for (const o of options) {\n                if (o.nodeName === 'OPTGROUP') {\n                    const optgroupOptions = o.childNodes;\n                    for (const oo of optgroupOptions) {\n                        if (oo.nodeName === 'OPTION') {\n                            const option = oo;\n                            if (option.selected) {\n                                values.push(option.value);\n                            }\n                        }\n                    }\n                }\n                if (o.nodeName === 'OPTION') {\n                    const option = o;\n                    if (option.selected) {\n                        values.push(option.value);\n                    }\n                }\n            }\n            return values;\n        }\n        setSelected(value) {\n            this.changeListen(false);\n            const options = this.select.childNodes;\n            for (const o of options) {\n                if (o.nodeName === 'OPTGROUP') {\n                    const optgroup = o;\n                    const optgroupOptions = optgroup.childNodes;\n                    for (const oo of optgroupOptions) {\n                        if (oo.nodeName === 'OPTION') {\n                            const option = oo;\n                            option.selected = value.includes(option.value);\n                        }\n                    }\n                }\n                if (o.nodeName === 'OPTION') {\n                    const option = o;\n                    option.selected = value.includes(option.value);\n                }\n            }\n            this.changeListen(true);\n        }\n        updateSelect(id, style, classes) {\n            this.changeListen(false);\n            if (id) {\n                this.select.dataset.id = id;\n            }\n            if (style) {\n                this.select.style.cssText = style;\n            }\n            if (classes) {\n                this.select.className = '';\n                classes.forEach((c) => {\n                    if (c.trim() !== '') {\n                        this.select.classList.add(c.trim());\n                    }\n                });\n            }\n            this.changeListen(true);\n        }\n        updateOptions(data) {\n            this.changeListen(false);\n            this.select.innerHTML = '';\n            for (const d of data) {\n                if (d instanceof Optgroup) {\n                    this.select.appendChild(this.createOptgroup(d));\n                }\n                if (d instanceof Option) {\n                    this.select.appendChild(this.createOption(d));\n                }\n            }\n            this.select.dispatchEvent(new Event('change'));\n            this.changeListen(true);\n        }\n        createOptgroup(optgroup) {\n            const optgroupEl = document.createElement('optgroup');\n            optgroupEl.id = optgroup.id;\n            optgroupEl.label = optgroup.label;\n            if (optgroup.selectAll) {\n                optgroupEl.dataset.selectAll = 'true';\n            }\n            if (optgroup.closable !== 'off') {\n                optgroupEl.dataset.closable = optgroup.closable;\n            }\n            if (optgroup.options) {\n                for (const o of optgroup.options) {\n                    optgroupEl.appendChild(this.createOption(o));\n                }\n            }\n            return optgroupEl;\n        }\n        createOption(info) {\n            const optionEl = document.createElement('option');\n            optionEl.id = info.id;\n            optionEl.value = info.value;\n            optionEl.innerHTML = info.text;\n            if (info.html !== '') {\n                optionEl.setAttribute('data-html', info.html);\n            }\n            if (info.selected) {\n                optionEl.selected = info.selected;\n            }\n            if (info.disabled) {\n                optionEl.disabled = true;\n            }\n            if (info.display === false) {\n                optionEl.style.display = 'none';\n            }\n            if (info.placeholder) {\n                optionEl.setAttribute('data-placeholder', 'true');\n            }\n            if (info.mandatory) {\n                optionEl.setAttribute('data-mandatory', 'true');\n            }\n            if (info.class) {\n                info.class.split(' ').forEach((optionClass) => {\n                    optionEl.classList.add(optionClass);\n                });\n            }\n            if (info.data && typeof info.data === 'object') {\n                Object.keys(info.data).forEach((key) => {\n                    optionEl.setAttribute('data-' + kebabCase(key), info.data[key]);\n                });\n            }\n            return optionEl;\n        }\n        destroy() {\n            this.changeListen(false);\n            this.select.removeEventListener('change', this.valueChange.bind(this));\n            if (this.observer) {\n                this.observer.disconnect();\n                this.observer = null;\n            }\n            delete this.select.dataset.id;\n            this.showUI();\n        }\n    }\n\n    class SlimSelect {\n        constructor(config) {\n            var _a;\n            this.events = {\n                search: undefined,\n                searchFilter: (opt, search) => {\n                    return opt.text.toLowerCase().indexOf(search.toLowerCase()) !== -1;\n                },\n                addable: undefined,\n                beforeChange: undefined,\n                afterChange: undefined,\n                beforeOpen: undefined,\n                afterOpen: undefined,\n                beforeClose: undefined,\n                afterClose: undefined,\n            };\n            this.windowResize = debounce(() => {\n                if (!this.settings.isOpen && !this.settings.isFullOpen) {\n                    return;\n                }\n                this.render.moveContent();\n            });\n            this.windowScroll = debounce(() => {\n                if (!this.settings.isOpen && !this.settings.isFullOpen) {\n                    return;\n                }\n                this.render.moveContent();\n            });\n            this.documentClick = (e) => {\n                if (!this.settings.isOpen) {\n                    return;\n                }\n                if (e.target && !hasClassInTree(e.target, this.settings.id)) {\n                    this.close(e.type);\n                }\n            };\n            this.windowVisibilityChange = () => {\n                if (document.hidden) {\n                    this.close();\n                }\n            };\n            this.selectEl = (typeof config.select === 'string' ? document.querySelector(config.select) : config.select);\n            if (!this.selectEl) {\n                if (config.events && config.events.error) {\n                    config.events.error(new Error('Could not find select element'));\n                }\n                return;\n            }\n            if (this.selectEl.tagName !== 'SELECT') {\n                if (config.events && config.events.error) {\n                    config.events.error(new Error('Element isnt of type select'));\n                }\n                return;\n            }\n            if (this.selectEl.dataset.ssid) {\n                this.destroy();\n            }\n            this.settings = new Settings(config.settings);\n            const debounceEvents = ['afterChange', 'beforeOpen', 'afterOpen', 'beforeClose', 'afterClose'];\n            for (const key in config.events) {\n                if (!config.events.hasOwnProperty(key)) {\n                    continue;\n                }\n                if (debounceEvents.indexOf(key) !== -1) {\n                    this.events[key] = debounce(config.events[key], 100);\n                }\n                else {\n                    this.events[key] = config.events[key];\n                }\n            }\n            this.settings.disabled = ((_a = config.settings) === null || _a === void 0 ? void 0 : _a.disabled) ? config.settings.disabled : this.selectEl.disabled;\n            this.settings.isMultiple = this.selectEl.multiple;\n            this.settings.style = this.selectEl.style.cssText;\n            this.settings.class = this.selectEl.className.split(' ');\n            this.select = new Select(this.selectEl);\n            this.select.updateSelect(this.settings.id, this.settings.style, this.settings.class);\n            this.select.hideUI();\n            this.select.onValueChange = (values) => {\n                this.setSelected(values);\n            };\n            this.select.onClassChange = (classes) => {\n                this.settings.class = classes;\n                this.render.updateClassStyles();\n            };\n            this.select.onDisabledChange = (disabled) => {\n                if (disabled) {\n                    this.disable();\n                }\n                else {\n                    this.enable();\n                }\n            };\n            this.select.onOptionsChange = (data) => {\n                this.setData(data);\n            };\n            this.store = new Store(this.settings.isMultiple ? 'multiple' : 'single', config.data ? config.data : this.select.getData());\n            if (config.data) {\n                this.select.updateOptions(this.store.getData());\n            }\n            const callbacks = {\n                open: this.open.bind(this),\n                close: this.close.bind(this),\n                addable: this.events.addable ? this.events.addable : undefined,\n                setSelected: this.setSelected.bind(this),\n                addOption: this.addOption.bind(this),\n                search: this.search.bind(this),\n                beforeChange: this.events.beforeChange,\n                afterChange: this.events.afterChange,\n            };\n            this.render = new Render(this.settings, this.store, callbacks);\n            this.render.renderValues();\n            this.render.renderOptions(this.store.getData());\n            const selectAriaLabel = this.selectEl.getAttribute('aria-label');\n            const selectAriaLabelledBy = this.selectEl.getAttribute('aria-labelledby');\n            if (selectAriaLabel) {\n                this.render.main.main.setAttribute('aria-label', selectAriaLabel);\n            }\n            else if (selectAriaLabelledBy) {\n                this.render.main.main.setAttribute('aria-labelledby', selectAriaLabelledBy);\n            }\n            if (this.selectEl.parentNode) {\n                this.selectEl.parentNode.insertBefore(this.render.main.main, this.selectEl.nextSibling);\n            }\n            document.addEventListener('click', this.documentClick);\n            window.addEventListener('resize', this.windowResize, false);\n            if (this.settings.openPosition === 'auto') {\n                window.addEventListener('scroll', this.windowScroll, false);\n            }\n            document.addEventListener('visibilitychange', this.windowVisibilityChange);\n            if (this.settings.disabled) {\n                this.disable();\n            }\n            if (this.settings.alwaysOpen) {\n                this.open();\n            }\n            this.selectEl.slim = this;\n        }\n        enable() {\n            this.settings.disabled = false;\n            this.select.enable();\n            this.render.enable();\n        }\n        disable() {\n            this.settings.disabled = true;\n            this.select.disable();\n            this.render.disable();\n        }\n        getData() {\n            return this.store.getData();\n        }\n        setData(data) {\n            const selected = this.store.getSelected();\n            const err = this.store.validateDataArray(data);\n            if (err) {\n                if (this.events.error) {\n                    this.events.error(err);\n                }\n                return;\n            }\n            this.store.setData(data);\n            const dataClean = this.store.getData();\n            this.select.updateOptions(dataClean);\n            this.render.renderValues();\n            this.render.renderOptions(dataClean);\n            if (this.events.afterChange && !isEqual(selected, this.store.getSelected())) {\n                this.events.afterChange(this.store.getSelectedOptions());\n            }\n        }\n        getSelected() {\n            return this.store.getSelected();\n        }\n        setSelected(value, runAfterChange = true) {\n            const selected = this.store.getSelected();\n            this.store.setSelectedBy('value', Array.isArray(value) ? value : [value]);\n            const data = this.store.getData();\n            this.select.updateOptions(data);\n            this.render.renderValues();\n            if (this.render.content.search.input.value !== '') {\n                this.search(this.render.content.search.input.value);\n            }\n            else {\n                this.render.renderOptions(data);\n            }\n            if (runAfterChange && this.events.afterChange && !isEqual(selected, this.store.getSelected())) {\n                this.events.afterChange(this.store.getSelectedOptions());\n            }\n        }\n        addOption(option) {\n            const selected = this.store.getSelected();\n            if (!this.store.getDataOptions().some((o) => { var _a; return o.value === ((_a = option.value) !== null && _a !== void 0 ? _a : option.text); })) {\n                this.store.addOption(option);\n            }\n            const data = this.store.getData();\n            this.select.updateOptions(data);\n            this.render.renderValues();\n            this.render.renderOptions(data);\n            if (this.events.afterChange && !isEqual(selected, this.store.getSelected())) {\n                this.events.afterChange(this.store.getSelectedOptions());\n            }\n        }\n        open() {\n            if (this.settings.disabled || this.settings.isOpen) {\n                return;\n            }\n            if (this.events.beforeOpen) {\n                this.events.beforeOpen();\n            }\n            this.render.open();\n            if (this.settings.showSearch) {\n                this.render.searchFocus();\n            }\n            this.settings.isOpen = true;\n            setTimeout(() => {\n                if (this.events.afterOpen) {\n                    this.events.afterOpen();\n                }\n                if (this.settings.isOpen) {\n                    this.settings.isFullOpen = true;\n                }\n            }, this.settings.timeoutDelay);\n            if (this.settings.contentPosition === 'absolute') {\n                if (this.settings.intervalMove) {\n                    clearInterval(this.settings.intervalMove);\n                }\n                this.settings.intervalMove = setInterval(this.render.moveContent.bind(this.render), 500);\n            }\n        }\n        close(eventType = null) {\n            if (!this.settings.isOpen || this.settings.alwaysOpen) {\n                return;\n            }\n            if (this.events.beforeClose) {\n                this.events.beforeClose();\n            }\n            this.render.close();\n            if (this.render.content.search.input.value !== '') {\n                this.search('');\n            }\n            this.render.mainFocus(eventType);\n            this.settings.isOpen = false;\n            this.settings.isFullOpen = false;\n            setTimeout(() => {\n                if (this.events.afterClose) {\n                    this.events.afterClose();\n                }\n            }, this.settings.timeoutDelay);\n            if (this.settings.intervalMove) {\n                clearInterval(this.settings.intervalMove);\n            }\n        }\n        search(value) {\n            if (this.render.content.search.input.value !== value) {\n                this.render.content.search.input.value = value;\n            }\n            if (!this.events.search) {\n                this.render.renderOptions(value === '' ? this.store.getData() : this.store.search(value, this.events.searchFilter));\n                return;\n            }\n            this.render.renderSearching();\n            const searchResp = this.events.search(value, this.store.getSelectedOptions());\n            if (searchResp instanceof Promise) {\n                searchResp\n                    .then((data) => {\n                    this.render.renderOptions(this.store.partialToFullData(data));\n                })\n                    .catch((err) => {\n                    this.render.renderError(typeof err === 'string' ? err : err.message);\n                });\n                return;\n            }\n            else if (Array.isArray(searchResp)) {\n                this.render.renderOptions(this.store.partialToFullData(searchResp));\n            }\n            else {\n                this.render.renderError('Search event must return a promise or an array of data');\n            }\n        }\n        destroy() {\n            document.removeEventListener('click', this.documentClick);\n            window.removeEventListener('resize', this.windowResize, false);\n            if (this.settings.openPosition === 'auto') {\n                window.removeEventListener('scroll', this.windowScroll, false);\n            }\n            document.removeEventListener('visibilitychange', this.windowVisibilityChange);\n            this.store.setData([]);\n            this.render.destroy();\n            this.select.destroy();\n        }\n    }\n\n    return SlimSelect;\n\n}));\n"],"names":["$6b5f202d1456c0af$var$catInfo","document","querySelector","$6b5f202d1456c0af$var$loader","$6b5f202d1456c0af$var$error","$6b5f202d1456c0af$export$913382e0b15b5503","url","fetch","then","response","ok","Error","status","classList","add","json","breeds","breedList","markup","map","breed","id","name","join","innerHTML","$6b5f202d1456c0af$var$renderBreedsList","catch","error1","remove","$6b5f202d1456c0af$export$57b7d3a597416aa2","breedId","breedData","markupUrl","item","markupName","flatMap","elem","description","$6b5f202d1456c0af$var$renderCatInfo","error","$parcel$interopDefault","generateID","Math","random","toString","substring","hasClassInTree","element","className","hasClass","e","c","contains","dataset","parentByClass","parentNode","debounce","func","wait","immediate","timeout","args","context","self","later","apply","callNow","clearTimeout","setTimeout","isEqual","a","b","JSON","stringify","kebabCase","str","result","replace","match","toLowerCase","toUpperCase","Settings","constructor","settings","this","style","class","isMultiple","isOpen","isFullOpen","intervalMove","disabled","undefined","alwaysOpen","showSearch","searchPlaceholder","searchText","searchingText","searchHighlight","closeOnSelect","contentLocation","body","contentPosition","openPosition","placeholderText","allowDeselect","hideSelected","showOptionTooltips","minSelected","maxSelected","timeoutDelay","maxValuesShown","maxValuesMessage","Optgroup","optgroup","label","selectAll","closable","options","o","push","Option","option","value","text","html","selected","display","mandatory","placeholder","data","Store","validateDataArray","Array","isArray","dataObj","validateOption","partialToFullData","dataFinal","forEach","optOptions","length","setData","selectType","setSelectedBy","getSelected","getData","filter","getDataOptions","addOption","concat","selectedType","selectedValues","firstOption","hasSelected","includes","selectedOptions","getSelectedOptions","opt","getSelectedIDs","selectedIDs","op","getOptgroupByID","getOptionByID","search","searchFilter","trim","includeOptgroup","dataSearch","getSelectType","type","Render","enable","main","classes","content","input","disable","open","arrow","path","setAttribute","arrowOpen","openAbove","openBelow","moveContent","store","selectedId","selectedOption","list","ensureElementInView","close","arrowClose","updateClassStyles","removeAttribute","cssText","updateAriaAttributes","role","mainDiv","_a","createElement","tabIndex","onkeydown","key","callbacks","highlight","highlighted","click","onclick","values","appendChild","deselect","hide","stopPropagation","shouldDelete","before","after","beforeChange","setSelected","updateDeselectAll","afterChange","deselectSvg","createElementNS","deselectPath","arrowPath","svg","mainFocus","eventType","focus","preventScroll","placeholderOption","renderValues","renderMultipleValues","renderSingleValue","selectedSingle","singleValue","single","innerText","outerHTML","currentNodes","childNodes","max","textContent","removeNodes","i","node","getAttribute","n","valueOut","hasChildNodes","removeChild","d","shouldAdd","String","multipleValue","insertBefore","insertAdjacentElement","valueText","deleteDiv","valueDelete","preventDefault","deleteSvg","deletePath","optionDelete","contentDiv","searchDiv","listDiv","putContent","moveContentAbove","moveContentBelow","addable","searchReturn","readOnly","oninput","target","ctrlKey","plus","plusPath","addablePath","inputValue","runFinish","oo","newOption","addableValue","Promise","searchFocus","getOptions","notPlaceholder","notDisabled","notHidden","query","from","querySelectorAll","dir","prevOption","prevParent","parentElement","optgroupLabel","selectOption","selectParent","renderError","errorDiv","renderSearching","searchingDiv","searching","renderOptions","noResults","optgroupEl","optgroupLabelText","optgroupActions","optgroupSelectAll","allSelected","o1","selectAllText","selectAllSvg","selectAllBox","optgroupSelectAllBox","selectAllCheck","optgroupSelectAllCheck","addEventListener","currentSelected","newSelected","s","optgroupClosable","optgroupClosableSvg","optgroupClosableArrow","some","o2","optionEl","split","dataClass","highlightText","searchHighlighter","currentTarget","elementID","shouldUpdate","destroy","completedString","regex","RegExp","matchStartPosition","index","matchEndPosition","originalTextFoundByRegex","mainHeight","offsetHeight","contentHeight","containerRect","getBoundingClientRect","margin","top","height","window","scrollY","left","scrollX","width","container","cTop","scrollTop","offsetTop","cBottom","clientHeight","eTop","eBottom","mainRect","innerHeight","hasSelectedItems","deselectButton","hideClass","Select","select","hideUI","showUI","changeListen","listen","observer","observe","subtree","childList","attributes","disconnect","valueChange","ev","onValueChange","getSelectedValues","observeCall","mutations","classChanged","disabledChanged","optgroupOptionChanged","m","attributeName","nodeName","onClassChange","onDisabledChange","onOptionsChange","nodes","getDataFromOptgroup","getDataFromOption","selectall","optgroupOptions","updateSelect","updateOptions","createOptgroup","createOption","dispatchEvent","Event","info","optionClass","Object","keys","removeEventListener","bind","passive","MutationObserver","SlimSelect","render","err","events","dataClean","runAfterChange","beforeOpen","afterOpen","clearInterval","setInterval","beforeClose","afterClose","searchResp","message","documentClick","windowResize","windowScroll","windowVisibilityChange","config","indexOf","hidden","selectEl","tagName","ssid","debounceEvents","hasOwnProperty","multiple","selectAriaLabel","selectAriaLabelledBy","nextSibling","slim","factory","$1f0dc3b9307be026$var$breedList"],"version":3,"file":"index.e1e1312c.js.map"}